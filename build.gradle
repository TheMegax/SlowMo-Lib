//file:noinspection GroovyUnusedAssignment

plugins {
	id 'fabric-loom' version '0.11.+'
	id 'maven-publish'
	id 'signing'
	id "com.modrinth.minotaur" version "2.+"
}

repositories {
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url "https://maven.shedaniel.me/"
	}

	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}

}


sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

// This field defines the targeted Java version
def targetJavaVersion = 17

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.gitlab.Lortseam.completeconfig:base:${project.completeconfig_version}"
	include "com.gitlab.Lortseam.completeconfig:base:${project.completeconfig_version}"

	modImplementation "com.gitlab.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}"
	include "com.gitlab.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}"

	modImplementation "com.terraformersmc:modmenu:4.0.5"

	modImplementation "io.github.ladysnake:satin:${satin_version}"
	include "io.github.ladysnake:satin:${satin_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.deprecation(true)
	it.options.incremental(true)
	it.options.release.set(targetJavaVersion)
}

task javadocJar(type: Jar, dependsOn: classes){
	classifier "javadoc"
	from javadoc
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/slowmo.accesswidener")
}

ext["ossrhPassword"] = null

File secretPropsFile = project.rootProject.file('keys.properties')
if (secretPropsFile.exists()) {
	Properties p = new Properties()
	new FileInputStream(secretPropsFile).withCloseable { is ->
		p.load(is)
	}
	p.each { name, value ->
		ext[name] = value
	}
}

signing {
	if (ossrhPassword != null) {
		sign publishing.publications
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN") // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
	projectId = "slowmo-lib" // This can be the project ID or the slug. Either will work!
	versionNumber = "1.0.6" // You don't need to set this manually. Will fail if Modrinth has this version already
	versionName = "SlowMo Alpha 1.0.6"
	versionType = "alpha" // can be 'Release', 'beta' or 'alpha'
	uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = ["1.19", "1.19.1", "1.19.2"] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	dependencies { // A special DSL for creating dependencies
		// scope.type
		// The scope can be `required`, `optional`, `incompatible`, or `embedded`
		// The type can either be `project` or `version`
		optional.project "cloth-config"
		optional.project "modmenu"
		required.project "fabric-api"
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact(javadocJar)
			pom{
				name = "slowmo-lib"
				description = "Minecraft Fabric tickrate changer library"
				url = 'https://github.com/themegax/slowmo-lib'
				developers {
					developer {
						id = 'themegax'
						name = 'TheMegax'
						email = 'mathias.tello12@gmail.com'
					}
				}

				licenses{
					license{
						name = "GNU Affero General Public License v3.0"
						url = "https://www.gnu.org/licenses/agpl-3.0.en.html"
					}
				}

				scm {
					connection = 'scm:git:github.com/themegax/slowmo-lib.git'
					developerConnection = 'scm:git:github.com/themegax/slowmo-lib.git'
					url = 'https://github.com/themegax/slowmo-lib'
				}
			}
		}
	}

	repositories {
		if (ossrhPassword != null) {
			maven {
				url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
				credentials {
					username ossrhUsername
					password ossrhPassword
				}
			}
		}
	}
}